Reading symbols from ./bin/game_server...
(gdb) run ../data/config.json ../static
Starting program: /home/germt/temp_programming/sprint18/time_control/solution/build_debug/bin/game_server ../data/config.json ../static
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/aarch64-linux-gnu/libthread_db.so.1".
{"timestamp":"2024-11-07T12:14:56.065872","data":{"port":8080,"address":"0.0.0.0"},"message":"server started"}
[New Thread 0xfffff7aef100 (LWP 122781)]
[New Thread 0xfffff72df100 (LWP 122782)]
[New Thread 0xfffff6acf100 (LWP 122783)]
[New Thread 0xfffff62bf100 (LWP 122784)]
[New Thread 0xfffff5aaf100 (LWP 122785)]
[New Thread 0xfffff529f100 (LWP 122786)]
[New Thread 0xfffff4a8f100 (LWP 122787)]
{"timestamp":"2024-11-07T12:15:03.430124","data":{"ip":"192.168.1.145","URI":"/api/v1/game/join","method":"POST"},"message":"request received"}
{"timestamp":"2024-11-07T12:15:03.430474","data":{"ip":"192.168.1.145","response_time":0,"code":200,"content_type":"application/json"},"message":"response sent"}
{"timestamp":"2024-11-07T12:15:15.512037","data":{"ip":"192.168.1.145","URI":"/api/v1/game/join","method":"POST"},"message":"request received"}
{"timestamp":"2024-11-07T12:15:15.512370","data":{"ip":"192.168.1.145","response_time":0,"code":200,"content_type":"application/json"},"message":"response sent"}
{"timestamp":"2024-11-07T12:15:38.962678","data":{"ip":"192.168.1.145","URI":"/api/v1/game/player/action","method":"POST"},"message":"request received"}

Thread 5 "game_server" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0xfffff62bf100 (LWP 122784)]
0x0000aaaaaabed254 in model::Dog::SetVelocity (this=0xfff00fff1ac2, vel=...) at /home/germt/temp_programming/sprint18/time_control/solution/src/game_session.h:63
63                  state_.velocity = vel;
(gdb) display vel
1: vel = {x = 4, y = 0}
(gdb) display state_.velocity
2: state_.velocity = <error: Cannot access memory at address 0xfff00fff1afa>
(gdb) backtrace
#0  0x0000aaaaaabed254 in model::Dog::SetVelocity (this=0xfff00fff1ac2, vel=...)
    at /home/germt/temp_programming/sprint18/time_control/solution/src/game_session.h:63
#1  0x0000aaaaaabece3c in players::Application::SetDogAction (this=0xffffffffc6c0, player=0xfffff00026d0,
    action_move=players::ActionMove::RIGHT)
    at /home/germt/temp_programming/sprint18/time_control/solution/src/players.cpp:106
#2  0x0000aaaaaac41c24 in http_handler::APIHandler::HandleAction (this=0xaaaaaadfd070, found_player=0xfffff00026d0,
    body="{\"move\": \"R\"}", version=11, keep_alive=true)
    at /home/germt/temp_programming/sprint18/time_control/solution/src/api_handler.cpp:253
#3  0x0000aaaaaac3f654 in operator() (__closure=0xfffff62bbc70, found_player=0xfffff00026d0, version=11, keep_alive=true,
    head_only=false) at /home/germt/temp_programming/sprint18/time_control/solution/src/api_handler.cpp:130
#4  0x0000aaaaaac42d50 in http_handler::APIHandler::ExecuteAuthorized<http_handler::APIHandler::ReturnAPIResponse(const StringRequest&&, std::string)::<lambda(players::Player*, unsigned int, bool, bool)> >(const http_handler::StringRequest &, struct {...} &&) (this=0xaaaaaadfd070, req=..., action=...)
    at /home/germt/temp_programming/sprint18/time_control/solution/src/api_handler.h:103
#5  0x0000aaaaaac40174 in http_handler::APIHandler::ReturnAPIResponse (this=0xaaaaaadfd070, req=...,
    req_str="/api/v1/game/player/action")
    at /home/germt/temp_programming/sprint18/time_control/solution/src/api_handler.cpp:131
#6  0x0000aaaaaab0ff90 in http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}::operator()() const (__closure=0xfffff62bc0f8)
    at /home/germt/temp_programming/sprint18/time_control/solution/src/request_handler.h:86
#7  0x0000aaaaaab25ddc in boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>::operator()() (this=0xfffff62bc0f8)
    at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/bind_handler.hpp:60
#8  0x0000aaaaaab2374c in boost::asio::asio_handler_invoke<boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_strin--Type <RET> for more, q to quit, c to continue without paging--c
g_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}> >(boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&, ...) (function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/handler_invoke_hook.hpp:88
#9  0x0000aaaaaab21140 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>(boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&) (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#10 0x0000aaaaaab1fc0c in boost::asio::detail::asio_handler_invoke<boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>(boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>*) (function=..., this_handler=0xfffff62bc0f8) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/bind_handler.hpp:111
#11 0x0000aaaaaab1daac in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}> >(boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&) (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#12 0x0000aaaaaab1fdf8 in boost::asio::detail::executor_op<boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>, std::allocator<void>, boost::asio::detail::scheduler_operation>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) (owner=0xaaaaaadf5e20, base=0xaaaaaadfbc80) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/executor_op.hpp:70
#13 0x0000aaaaaaac6424 in boost::asio::detail::scheduler_operation::complete (this=0xaaaaaadfbc80, owner=0xaaaaaadf5e20, ec=..., bytes_transferred=0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/scheduler_operation.hpp:40
#14 0x0000aaaaaaad84cc in boost::asio::detail::strand_executor_service::run_ready_handlers (impl=std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> (use count 5, weak count 0) = {...}) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.ipp:150
#15 0x0000aaaaaab0803c in boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, void>::operator() (this=0xfffff62bc410) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.hpp:127
#16 0x0000aaaaaab078e0 in boost::asio::asio_handler_invoke<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, void> > (function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/handler_invoke_hook.hpp:88
#17 0x0000aaaaaab06bb0 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, void>, boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, void> > (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#18 0x0000aaaaaab061fc in boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul>::execute<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, void> > (this=0xfffff62bc6d0, f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/io_context.hpp:288
#19 0x0000aaaaaab05888 in boost_asio_execution_execute_fn::impl::operator()<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const&, boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, void> > (this=0xaaaaaacd7988 <boost_asio_execution_execute_fn::static_instance<boost_asio_execution_execute_fn::impl>::instance>, t=..., f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/execution/execute.hpp:208
#20 0x0000aaaaaab1b96c in boost::asio::detail::strand_executor_service::do_execute<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>, std::allocator<void> >(std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> const&, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const&, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&&, std::allocator<void> const&) (impl=std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> (use count 5, weak count 0) = {...}, ex=..., function=..., a=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.hpp:258
#21 0x0000aaaaaab19a6c in boost::asio::detail::strand_executor_service::execute<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}> >(std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> const&, boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const&, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&&, std::enable_if<boost::asio::can_query<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> const, boost::asio::execution::allocator_t<void> >::value, void>::type*) (impl=std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> (use count 5, weak count 0) = {...}, ex=..., function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.hpp:209
#22 0x0000aaaaaab18b00 in boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> >::execute<boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}> >(boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&&) const (this=0xfffff62bc6d0, f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/strand.hpp:287
#23 0x0000aaaaaab178f8 in boost_asio_execution_execute_fn::impl::operator()<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> >, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}> >(boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> >&&, boost::asio::detail::binder0<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}>&&) const (this=0xaaaaaacd7988 <boost_asio_execution_execute_fn::static_instance<boost_asio_execution_execute_fn::impl>::instance>, t=..., f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/execution/execute.hpp:208
#24 0x0000aaaaaab16358 in boost::asio::detail::initiate_dispatch_with_executor<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> > >::operator()<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&>(http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&, std::enable_if<boost::asio::execution::is_executor<std::conditional<true, boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> >, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&>::type>::value, void>::type*, std::enable_if<!boost::asio::detail::is_work_dispatcher_required<std::decay<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&>::type, boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> >, void>::value, void>::type*) const (this=0xfffff62bc860, handler=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/dispatch.hpp:119
#25 0x0000aaaaaab14f0c in boost::asio::detail::completion_handler_async_result<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}, void ()>::initiate<boost::asio::detail::initiate_dispatch_with_executor<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> > >, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&>(boost::asio::detail::initiate_dispatch_with_executor<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> > >&&, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&) (initiation=..., token=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/async_result.hpp:482
#26 0x0000aaaaaab12708 in boost::asio::async_initiate<http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&, void (), boost::asio::detail::initiate_dispatch_with_executor<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> > >>(http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&) (initiation=..., token=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/async_result.hpp:862
#27 0x0000aaaaaab10528 in boost::asio::dispatch<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> >, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&>(boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> > const&, http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&)::{lambda()#1}&, boost::asio::constraint<boost::asio::execution::is_executor<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> > >::value||boost::asio::is_executor<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 0ul> > >::value, int>::type) (ex=..., token=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/dispatch.hpp:231
#28 0x0000aaaaaab10a74 in http_handler::RequestHandler::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&)::{lambda(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}&&) (this=0xaaaaaadf5720, req=..., send=..., log_function=...) at /home/germt/temp_programming/sprint18/time_control/solution/src/request_handler.h:98
#29 0x0000aaaaaab0e60c in logging_handler::LoggingRequestHandler<http_handler::RequestHandler>::operator()<boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}>(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&, http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest(boost::beast::http::message<true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, boost::beast::http::basic_fields<std::allocator<char> > >&&)::{lambda(auto:1&&)#1}&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&) (this=0xaaaaaadeec98, req=..., send=..., client_endpoint=...) at /home/germt/temp_programming/sprint18/time_control/solution/src/logging_handler.h:75
#30 0x0000aaaaaab0b37c in http_server::Session<logging_handler::LoggingRequestHandler<http_handler::RequestHandler> >::HandleRequest (this=0xaaaaaadeebc0, request=...) at /home/germt/temp_programming/sprint18/time_control/solution/src/http_server.h:98
#31 0x0000aaaaaabc9864 in http_server::SessionBase::OnRead (this=0xaaaaaadeebc0, ec=..., bytes_read=227) at /home/germt/temp_programming/sprint18/time_control/solution/src/http_server.cpp:47
#32 0x0000aaaaaabd6dd0 in std::__invoke_impl<void, void (http_server::SessionBase::* const&)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase>, boost::system::error_code&, unsigned long&> (__f=@0xfffff62bce78: (void (http_server::SessionBase::*)(http_server::SessionBase * const, boost::system::error_code, unsigned long)) 0xaaaaaabc9764 <http_server::SessionBase::OnRead(boost::system::error_code, unsigned long)>, __t=...) at /usr/include/c++/11/bits/invoke.h:74
#33 0x0000aaaaaabd4e58 in std::__invoke<void (http_server::SessionBase::* const&)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase>, boost::system::error_code&, unsigned long&> (__fn=@0xfffff62bce78: (void (http_server::SessionBase::*)(http_server::SessionBase * const, boost::system::error_code, unsigned long)) 0xaaaaaabc9764 <http_server::SessionBase::OnRead(boost::system::error_code, unsigned long)>) at /usr/include/c++/11/bits/invoke.h:96
#34 0x0000aaaaaabd37e0 in std::_Mem_fn_base<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), true>::operator()<std::shared_ptr<http_server::SessionBase>, boost::system::error_code&, unsigned long&> (this=0xfffff62bce78) at /usr/include/c++/11/functional:131
#35 0x0000aaaaaabd2ad0 in boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> >::invoke<0ul, boost::system::error_code&, unsigned long&> (this=0xfffff62bd8b8) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/detail/bind_handler.hpp:238
#36 0x0000aaaaaabd1f20 in boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> >::operator()<boost::system::error_code&, unsigned long&> (this=0xfffff62bd8b8) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/detail/bind_handler.hpp:261
#37 0x0000aaaaaabd19a8 in boost::beast::async_base<boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> >, boost::asio::any_io_executor, std::allocator<void> >::complete_now<boost::system::error_code&, unsigned long&> (this=0xfffff62bd8b0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/async_base.hpp:392
#38 0x0000aaaaaabd1528 in boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >::operator() (this=0xfffff62bd8b0, ec=..., bytes_transferred=227) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/http/impl/read.hpp:114
#39 0x0000aaaaaabd1254 in boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>::complete(boost::system::error_code, unsigned long) (this=0xfffff62bd850, args#0=..., args#1=227) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/compose.hpp:380
#40 0x0000aaaaaabd0e14 in boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>::operator()<boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)> >(boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>&, boost::system::error_code, unsigned long) (this=0xfffff62bd850, self=..., ec=..., bytes_transferred=227) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/http/impl/read.hpp:307
#41 0x0000aaaaaabd4da4 in boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>::operator()<boost::system::error_code, unsigned long>(boost::system::error_code&&, unsigned long&&) (this=0xfffff62bd850) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/compose.hpp:374
#42 0x0000aaaaaabd36b8 in boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>::complete(boost::system::error_code, unsigned long) (this=0xfffff62bd7e8, args#0=..., args#1=227) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/compose.hpp:380
#43 0x0000aaaaaabd29d4 in boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>::operator()<boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >(boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>&, boost::system::error_code, unsigned long) (this=0xfffff62bd7e8, self=..., ec=..., bytes_transferred=227) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/http/impl/read.hpp:251
#44 0x0000aaaaaabda1b8 in boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>::operator()<boost::system::error_code&, unsigned long&>(boost::system::error_code&, unsigned long&) (this=0xfffff62bd7e8) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/compose.hpp:374
#45 0x0000aaaaaabd9a0c in boost::beast::async_base<boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>, boost::asio::any_io_executor, std::allocator<void> >::complete_now<boost::system::error_code&, unsigned long&>(boost::system::error_code&, unsigned long&) (this=0xfffff62bd7e0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/async_base.hpp:392
#46 0x0000aaaaaabd8d94 in boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >::operator()(boost::system::error_code, unsigned long) (this=0xfffff62bd7e0, ec=..., bytes_transferred=227) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/impl/basic_stream.hpp:424
#47 0x0000aaaaaabde940 in boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>::operator()() (this=0xfffff62bd7e0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/bind_handler.hpp:289
#48 0x0000aaaaaabdf010 in boost::asio::asio_handler_invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long> >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, ...) (function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/handler_invoke_hook.hpp:88
#49 0x0000aaaaaabdeefc in boost::beast::detail::asio_handler_invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&>(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> >*) (f=..., op=0xfffff62bd8b8) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/detail/bind_handler.hpp:276
#50 0x0000aaaaaabded80 in boost::beast::asio_handler_invoke<boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> >, boost::asio::any_io_executor, std::allocator<void>, boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&>(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::beast::async_base<boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> >, boost::asio::any_io_executor, std::allocator<void> >*) (f=..., p=0xfffff62bd8b0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/impl/async_base.hpp:64
#51 0x0000aaaaaabde8e4 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > > >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >&) (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#52 0x0000aaaaaabde3e8 in boost::asio::detail::asio_handler_invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>*) (function=..., this_handler=0xfffff62bd850) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/compose.hpp:492
#53 0x0000aaaaaabddfa4 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)> >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>&) (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#54 0x0000aaaaaabddb3c in boost::asio::detail::asio_handler_invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>*) (function=..., this_handler=0xfffff62bd7e8) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/compose.hpp:492
#55 0x0000aaaaaabdd574 in boost::beast::asio_handler_invoke<boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>, boost::asio::any_io_executor, std::allocator<void>, boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&>(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::beast::async_base<boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)>, boost::asio::any_io_executor, std::allocator<void> >*) (f=..., p=0xfffff62bd7e0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/beast/core/impl/async_base.hpp:64
#56 0x0000aaaaaabdd110 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> > >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >&) (function=..., context=warning: RTTI symbol not found for class 'boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >'
...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#57 0x0000aaaaaabdef44 in boost::asio::detail::asio_handler_invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>*) (function=..., this_handler=0xfffff62bd7e0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/bind_handler.hpp:344
#58 0x0000aaaaaabdee08 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long> >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&) (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#59 0x0000aaaaaabdeb14 in boost::asio::detail::executor_function::complete<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, std::allocator<void> >(boost::asio::detail::executor_function::impl_base*, bool) (base=0xaaaaaadf5c00, call=true) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/executor_function.hpp:116
#60 0x0000aaaaaaac4b24 in boost::asio::detail::executor_function::operator() (this=0xfffff62bdb60) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/executor_function.hpp:64
#61 0x0000aaaaaaafc208 in boost::asio::asio_handler_invoke<boost::asio::detail::executor_function> (function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/handler_invoke_hook.hpp:88
#62 0x0000aaaaaaafa2c4 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::executor_function, boost::asio::detail::executor_function> (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#63 0x0000aaaaaaafc484 in boost::asio::detail::executor_op<boost::asio::detail::executor_function, std::allocator<void>, boost::asio::detail::scheduler_operation>::do_complete (owner=0xaaaaaadfbf50, base=0xaaaaaadf61a0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/executor_op.hpp:70
#64 0x0000aaaaaaac6424 in boost::asio::detail::scheduler_operation::complete (this=0xaaaaaadf61a0, owner=0xaaaaaadfbf50, ec=..., bytes_transferred=0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/scheduler_operation.hpp:40
#65 0x0000aaaaaaad84cc in boost::asio::detail::strand_executor_service::run_ready_handlers (impl=std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> (use count 11, weak count 0) = {...}) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.ipp:150
#66 0x0000aaaaaab09c98 in boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, void>::operator() (this=0xfffff62bddb0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.hpp:127
#67 0x0000aaaaaab0929c in boost::asio::asio_handler_invoke<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, void> > (function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/handler_invoke_hook.hpp:88
#68 0x0000aaaaaab08ad8 in boost_asio_handler_invoke_helpers::invoke<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, void>, boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, void> > (function=..., context=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_invoke_helpers.hpp:54
#69 0x0000aaaaaab084d0 in boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul>::execute<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, void> > (this=0xfffff62be200, f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/io_context.hpp:288
#70 0x0000aaaaaab07fe8 in boost_asio_execution_execute_fn::impl::operator()<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const&, boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, void> > (this=0xaaaaaacd7988 <boost_asio_execution_execute_fn::static_instance<boost_asio_execution_execute_fn::impl>::instance>, t=..., f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/execution/execute.hpp:208
#71 0x0000aaaaaab07610 in boost::asio::detail::strand_executor_service::do_execute<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, boost::asio::detail::executor_function, std::allocator<void> > (impl=std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> (use count 11, weak count 0) = {...}, ex=..., function=..., a=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.hpp:258
#72 0x0000aaaaaab06a90 in boost::asio::detail::strand_executor_service::execute<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> const, boost::asio::detail::executor_function> (impl=std::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> (use count 11, weak count 0) = {...}, ex=..., function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/strand_executor_service.hpp:209
#73 0x0000aaaaaab060c0 in boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> >::execute<boost::asio::detail::executor_function> (this=0xfffff62be200, f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/strand.hpp:287
#74 0x0000aaaaaab05688 in boost_asio_execution_execute_fn::impl::operator()<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> > const&, boost::asio::detail::executor_function> (this=0xaaaaaacd7988 <boost_asio_execution_execute_fn::static_instance<boost_asio_execution_execute_fn::impl>::instance>, t=..., f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/execution/execute.hpp:208
#75 0x0000aaaaaab048c8 in boost::asio::execution::detail::any_executor_base::execute_ex<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::allocator<void>, 4ul> > > (ex=..., f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/execution/any_executor.hpp:894
#76 0x0000aaaaaabddbf4 in boost::asio::execution::detail::any_executor_base::execute<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long> >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&&) const (this=0xfffff62be200, f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/execution/any_executor.hpp:611
#77 0x0000aaaaaabdd5a0 in boost_asio_execution_execute_fn::impl::operator()<boost::asio::any_io_executor, boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long> >(boost::asio::any_io_executor&&, boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&&) const (this=0xaaaaaacd7988 <boost_asio_execution_execute_fn::static_instance<boost_asio_execution_execute_fn::impl>::instance>, t=..., f=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/execution/execute.hpp:208
#78 0x0000aaaaaabdd188 in boost::asio::detail::handler_work_base<boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void>::dispatch<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>, boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> > >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >&) (this=0xfffff62be318, function=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_work.hpp:439
#79 0x0000aaaaaabdcaec in boost::asio::detail::handler_work<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::asio::any_io_executor, void>::complete<boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long> >(boost::asio::detail::binder2<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::system::error_code, unsigned long>&, boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >&) (this=0xfffff62be2e0, function=..., handler=warning: RTTI symbol not found for class 'boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >'
...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/handler_work.hpp:480
#80 0x0000aaaaaabdc2e8 in boost::asio::detail::reactive_socket_recv_op<boost::beast::buffers_prefix_view<boost::asio::mutable_buffer>, boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>::ops::transfer_op<true, boost::asio::mutable_buffer, boost::asio::detail::composed_op<boost::beast::http::detail::read_some_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::asio::detail::composed_op<boost::beast::http::detail::read_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::detail::parser_is_done>, boost::asio::detail::composed_work<void (boost::asio::any_io_executor)>, boost::beast::http::detail::read_msg_op<boost::beast::basic_stream<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::beast::unlimited_rate_policy>, boost::beast::basic_flat_buffer<std::allocator<char> >, true, boost::beast::http::basic_string_body<char, std::char_traits<char>, std::allocator<char> >, std::allocator<char>, boost::beast::detail::bind_front_wrapper<void (http_server::SessionBase::*)(boost::system::error_code, unsigned long), std::shared_ptr<http_server::SessionBase> > >, void (boost::system::error_code, unsigned long)>, void (boost::system::error_code, unsigned long)> >, boost::asio::any_io_executor>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) (owner=0xaaaaaadefea0, base=0xfffff0004870) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/reactive_socket_recv_op.hpp:145
#81 0x0000aaaaaaac6424 in boost::asio::detail::scheduler_operation::complete (this=0xfffff0004870, owner=0xaaaaaadefea0, ec=..., bytes_transferred=0) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/scheduler_operation.hpp:40
#82 0x0000aaaaaaaca31c in boost::asio::detail::scheduler::do_run_one (this=0xaaaaaadefea0, lock=..., this_thread=..., ec=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/scheduler.ipp:492
#83 0x0000aaaaaaac9c24 in boost::asio::detail::scheduler::run (this=0xaaaaaadefea0, ec=...) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/detail/impl/scheduler.ipp:210
#84 0x0000aaaaaaaca784 in boost::asio::io_context::run (this=0xffffffffc4b8) at /home/germt/.conan/data/boost/1.78.0/_/_/package/a18e70251053a574be69b363a75684b32cb07fcb/include/boost/asio/impl/io_context.ipp:63
#85 0x0000aaaaaaabe61c in operator() (__closure=0xaaaaaadfce18) at /home/germt/temp_programming/sprint18/time_control/solution/src/main.cpp:83
#86 0x0000aaaaaaac0ae4 in std::__invoke_impl<void, main(int, char const**)::<lambda()> >(std::__invoke_other, struct {...} &&) (__f=...) at /usr/include/c++/11/bits/invoke.h:61
#87 0x0000aaaaaaac0a88 in std::__invoke<main(int, char const**)::<lambda()> >(struct {...} &&) (__fn=...) at /usr/include/c++/11/bits/invoke.h:96
#88 0x0000aaaaaaac0a24 in std::thread::_Invoker<std::tuple<main(int, char const**)::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xaaaaaadfce18) at /usr/include/c++/11/bits/std_thread.h:259
#89 0x0000aaaaaaac09f8 in std::thread::_Invoker<std::tuple<main(int, char const**)::<lambda()> > >::operator()(void) (this=0xaaaaaadfce18) at /usr/include/c++/11/bits/std_thread.h:266
#90 0x0000aaaaaaac09d8 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<main(int, char const**)::<lambda()> > > >::_M_run(void) (this=0xaaaaaadfce10) at /usr/include/c++/11/bits/std_thread.h:211
#91 0x0000fffff7e431fc in ?? () from /lib/aarch64-linux-gnu/libstdc++.so.6
#92 0x0000fffff7c0d5c8 in start_thread (arg=0x0) at ./nptl/pthread_create.c:442
#93 0x0000fffff7c75d9c in thread_start () at ../sysdeps/unix/sysv/linux/aarch64/clone.S:79
(gdb)
